package Objects;

import java.util.Comparator;

public class Point{
	
	private double[] coords;
	private int dimensions;
	
	private int[] LS_indices;
	
	public Point(double _x, double _y) {
		this.coords = new double[] {_x, _y};
		this.dimensions = 2;
		this.LS_indices = new int[this.dimensions];
	}
	
	public Point(double[] _coords) {
		this.coords = _coords;
		this.dimensions = this.coords.length;
		this.LS_indices = new int[this.dimensions];
	}
	
	public void updateIndex(int dimension, int index) {
		this.LS_indices[dimension] = index;
	}
	
	public double[] getCoordinates() { return this.coords; }
	
	public int getDimensions() { return this.dimensions; }
	
	public double getCoordinateValueAt(int _dimension) { return this.coords[_dimension]; }
	
	public void setCoordinates(double v, int dim) { coords[dim] = v; }
	
	public int compareTo(Point _point, int _dimension) {
		if(_dimension >= _point.getDimensions() || _dimension >= this.dimensions) { throw new IndexOutOfBoundsException(); }
		
		if(this.coords[_dimension] == _point.getCoordinateValueAt(_dimension)) { return 0; }
		if(this.coords[_dimension] > _point.getCoordinateValueAt(_dimension)) { return 1; }
		return -1;
	}
	
	public String toString() {
		String out = "(";
		for(int i=0; i < coords.length; i++) { out += (i == coords.length-1) ? coords[i] : coords[i] + ", "; }
		return out + ")";
	}
	
	public void printString() {
		String out = "(";
		for(int i=0; i < coords.length; i++) { out += (i == coords.length-1) ? coords[i] : coords[i] + ", "; }
		System.out.println(out + ")");
	}
}
